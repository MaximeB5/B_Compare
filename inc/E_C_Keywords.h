#ifndef __E_C_KEYWORDS__
#define __E_C_KEYWORDS__

enum class E_C_QUALIFIER : int
{
	CONST,
	STATIC,
	VOLATILE,

	NONE
};

enum class E_C_TYPE : int
{
	// Regular Types

	VOID,

	CHAR,
	SIGNED_CHAR,
	UNSIGNED_CHAR,

	SHORT,
	SHORT_INT,
	SIGNED_SHORT,
	SIGNED_SHORT_INT,

	UNSIGNED_SHORT,
	UNSIGNED_SHORT_INT,

	INT,
	SIGNED,
	SIGNED_INT,

	UNSIGNED,
	UNSIGNED_INT,

	LONG,
	LONG_INT,
	SIGNED_LONG,
	SIGNED_LONG_INT,

	UNSIGNED_LONG,
	UNSIGNED_LONG_INT,

	LONG_LONG,
	LONG_LONG_INT,
	SIGNED_LONG_LONG,
	SIGNED_LONG_LONG_INT,

	UNSIGNED_LONG_LONG,
	UNSIGNED_LONG_LONG_INT,

	FLOAT,

	DOUBLE,

	LONG_DOUBLE,

	// Ptr Types

	PTR_VOID,

	PTR_CHAR,
	PTR_SIGNED_CHAR,
	PTR_UNSIGNED_CHAR,

	PTR_SHORT,
	PTR_SHORT_INT,
	PTR_SIGNED_SHORT,
	PTR_SIGNED_SHORT_INT,

	PTR_UNSIGNED_SHORT,
	PTR_UNSIGNED_SHORT_INT,

	PTR_INT,
	PTR_SIGNED,
	PTR_SIGNED_INT,

	PTR_UNSIGNED,
	PTR_UNSIGNED_INT,

	PTR_LONG,
	PTR_LONG_INT,
	PTR_SIGNED_LONG,
	PTR_SIGNED_LONG_INT,

	PTR_UNSIGNED_LONG,
	PTR_UNSIGNED_LONG_INT,

	PTR_LONG_LONG,
	PTR_LONG_LONG_INT,
	PTR_SIGNED_LONG_LONG,
	PTR_SIGNED_LONG_LONG_INT,

	PTR_UNSIGNED_LONG_LONG,
	PTR_UNSIGNED_LONG_LONG_INT,

	PTR_FLOAT,

	PTR_DOUBLE,

	PTR_LONG_DOUBLE,

	// End

	NONE
};

#endif // __E_C_KEYWORDS__